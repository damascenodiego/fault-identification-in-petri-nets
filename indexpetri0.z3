(declare-fun f_p1 () Int)
(declare-fun f_p2 () Int)
(declare-fun f_p3 () Int)
(declare-fun p1_f () Int)
(declare-fun p2_f () Int)
(declare-fun p3_f () Int)
(declare-fun l11 () Int)
(assert (= f_p1 1))
(assert (= f_p2 0))
(assert (= f_p3 0))
(assert (= p1_f 0))
(assert (= p2_f 0))
(assert (= p3_f 1))
(assert (>= l11 0))
(assert (forall ((l11 Int))
  (let ((a!1 (< (+ 0 (* l11 (- f_p1 p1_f))) 0))
        (a!2 (< (+ 0 (* l11 (- f_p2 p2_f))) 0))
        (a!3 (< (+ 1 (* l11 (- f_p3 p3_f))) 1)))
    (or a!1 a!2 a!3))))

(check-sat)
(get-model)
